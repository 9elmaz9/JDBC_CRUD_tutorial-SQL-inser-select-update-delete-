Supposing the MySQL database server is listening on the default port 3306 at localhost. The following code snippet
connects to the database name SampleDB by the user root and password secret:

String dbURL = "jdbc:mysql://localhost:3306/sampledb";
String username = "root";
String password = "secret";
 
try {
 
    Connection conn = DriverManager.getConnection(dbURL, username, password);
 
    if (conn != null) {
        System.out.println("Connected");
    }
} catch (SQLException ex) {
    ex.printStackTrace();
}




Once the connection was established, we have a Connection object which can be used to create statements 
in order to execute SQL queries. In the above code,we have to close the connection explicitly after finish working with the database:

conn.close();


However, since Java 7, we can take advantage of the try-with-resources statement which will close the connection automatically, as shown in the following code snippet:


try (Connection conn = DriverManager.getConnection(dbURL, username, password)) {
     
    // code to execute SQL queries goes here...
     
} catch (SQLException ex) {
    ex.printStackTrace();
}




If you are using Java 7 or later, this approach is recommended. The sample programs in this tutorial are all using this try-with-resources 
statement to make a database connection.
NOTE: For details about connecting to a MySQL database, see the article: Connect to MySQL database via JDBC.
